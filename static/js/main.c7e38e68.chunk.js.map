{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterdMonsters","filter","toLowerCase","includes","toLocaleLowerCase","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAAAC,GAAK,OACvB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCNSC,G,MAAW,SAAAR,GAAK,OAC3B,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCHZM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmJCG,G,wDA9Eb,aAAe,IAAD,8BACZ,gBAiCFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA/BtC,EAAKC,MAAQ,CACXb,SAAU,GAcVU,YAAa,IAnBH,E,qDA2Bd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAsB7C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YAEZU,EAAkBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC7CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYc,wBAIlD,OAME,cALA,CAKA,OAAKhC,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAzEVK,IAAMC,YCjETC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c7e38e68.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      alt=\"monster\"\r\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n    />\r\n    <h2> {props.monster.name} </h2>\r\n    <p> {props.monster.email} </p>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { Card } from '../card/card.component.jsx';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n  <div className=\"card-list\">\r\n    {props.monsters.map(monster => (\r\n      <Card key={monster.id} monster={monster} />\r\n    ))}\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n","import React from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n//import logo from './logo.svg';\nimport './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>Hello my name is Koji</p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// The following codes are the as below.\n// It means that default function is a component class.\n// class App extends Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           <p>Hello my name is Koji</p>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://reactjs.org\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             Learn React\n//           </a>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n\n// class App extends Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       string: 'Hello Koji'\n//     }\n//   }\n//   // { } is a variable\n//   // we can spcify a class in JS by using \"className=\"\n//   //\n//   // render will be called again once the state is changed.\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           <p>{ this.state.string }</p>\n//           {/* Just declaring/changing the state is required to update a view.\n//               We do not need to add a call back function to an Event handler,\n//               and call a render method when the state is changed anymore */}\n//           <button onClick={() => this.setState({ string: 'Hello Andrei' })}>Change text</button>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    // Each element should have a unique \"key\" prop.\n    this.state = {\n      monsters: [\n        // {\n        //   name: 'Frankenstein',\n        //   id: 'asc1',\n        // },\n        // {\n        //   name: 'Dracula',\n        //   id: 'asr1',\n        // },\n        // {\n        //   name: 'Zombie',\n        //   id: 'as1w',\n        // },\n      ],\n      searchField: '',\n    };\n\n    // Explicitly bind, but very vervose/redundant\n    //   so use an arrow function instead. (e) => {}\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json()) // json(), DO NOT FORGET to add () just after json\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  // Automatically bind \"this\" to App class by the arrow.\n  handleChange = e => {\n    this.setState({ searchField: e.target.value });\n\n    // // Because of async, this value will not apply immediately\n    // this.setState({ searchField: e.target.value });\n    // //console.log(this.state); // delayed\n\n    // If you want to wait a complete, use the following.\n    // NOTE: setState(state: any, callback?: () => void):\n    // this.setState({ searchField: e.target.value }, () =>\n    //   console.log(this.state)\n    // );\n  };\n\n  // we can spcify a class in JS by using \"className=\"\n  // { } is a variable\n  //\n  // render will be called again once the state is changed.\n  render() {\n    const { monsters, searchField } = this.state;\n    // Create a new array which satisfies a search condition.\n    const filterdMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n\n    // Where CardList is props (properites), <h1>Koji</h1> is Children of props\n    return (\n      // State will be propagated to down components such as cardList, card.\n      //\n      // Event(s) are automatically coducted by React,\n      // we do not take care of it because React must be smarter than us\n      // concidering an order, timing, and so on.\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filterdMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}